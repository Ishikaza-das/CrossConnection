{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rites\\\\OneDrive\\\\Desktop\\\\Program\\\\Learn\\\\Spring Boot\\\\crud-front\\\\src\\\\Products\\\\ImageUpload.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUpload({\n  id\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    try {\n      const response = await fetch(`http://localhost:8080/product/${id}/upload-image`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"Image uploaded successfully\");\n      } else {\n        console.error(\"Failed to upload image\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image\",\n      className: \"form-label\",\n      children: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      id: \"image\",\n      name: \"image\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageUpload;\nexport default function EditProduct() {\n  _s2();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [productinfo, setProductinfo] = useState({\n    productName: \"\",\n    productDescription: \"\",\n    pricing: \"\",\n    specification: \"\",\n    availability: \"\"\n  });\n  const [productData, setProductData] = useState(null);\n  const {\n    productName,\n    productDescription,\n    pricing,\n    specification,\n    availability\n  } = productinfo;\n  const onInputChange = e => {\n    setProductinfo({\n      ...productinfo,\n      [e.target.name]: e.target.value\n    });\n  };\n  useEffect(() => {\n    loadProduct();\n  }, []);\n  useEffect(() => {\n    if (productData) {\n      setProductinfo({\n        productName: productData.productName,\n        productDescription: productData.productDescription,\n        pricing: productData.pricing,\n        specification: productData.specification,\n        availability: productData.availability\n      });\n    }\n  }, [productData]);\n  const onUpdate = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8080/product/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(productinfo)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update product\");\n      }\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n    }\n  };\n  const loadProduct = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/products/${id}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch product\");\n      }\n      const result = await response.json();\n      setProductData(result);\n    } catch (error) {\n      console.error(\"Error fetching product:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 border rounded p-4 mt-2 shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center m-4\",\n          children: \"Edit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s2(EditProduct, \"zrIEUnOK5cf0d7rmsuhv6P/WUN4=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c2 = EditProduct;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageUpload\");\n$RefreshReg$(_c2, \"EditProduct\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","jsxDEV","_jsxDEV","ImageUpload","id","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","console","log","error","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","_c","EditProduct","_s2","navigate","productinfo","setProductinfo","productName","productDescription","pricing","specification","availability","productData","setProductData","onInputChange","e","value","loadProduct","onUpdate","preventDefault","headers","JSON","stringify","Error","result","json","onSubmit","_c2","$RefreshReg$"],"sources":["C:/Users/rites/OneDrive/Desktop/Program/Learn/Spring Boot/crud-front/src/Products/ImageUpload.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction ImageUpload({ id }) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/product/${id}/upload-image`,\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        console.log(\"Image uploaded successfully\");\r\n      } else {\r\n        console.error(\"Failed to upload image\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"image\" className=\"form-label\">\r\n        Image\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        className=\"form-control\"\r\n        id=\"image\"\r\n        name=\"image\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function EditProduct() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [productinfo, setProductinfo] = useState({\r\n    productName: \"\",\r\n    productDescription: \"\",\r\n    pricing: \"\",\r\n    specification: \"\",\r\n    availability: \"\",\r\n  });\r\n\r\n  const [productData, setProductData] = useState(null);\r\n\r\n  const {\r\n    productName,\r\n    productDescription,\r\n    pricing,\r\n    specification,\r\n    availability,\r\n  } = productinfo;\r\n\r\n  const onInputChange = (e) => {\r\n    setProductinfo({ ...productinfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productData) {\r\n      setProductinfo({\r\n        productName: productData.productName,\r\n        productDescription: productData.productDescription,\r\n        pricing: productData.pricing,\r\n        specification: productData.specification,\r\n        availability: productData.availability,\r\n      });\r\n    }\r\n  }, [productData]);\r\n\r\n  const onUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/product/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(productinfo),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update product\");\r\n      }\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n    }\r\n  };\r\n\r\n  const loadProduct = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/products/${id}`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch product\");\r\n      }\r\n      const result = await response.json();\r\n      setProductData(result);\r\n    } catch (error) {\r\n      console.error(\"Error fetching product:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 border rounded p-4 mt-2 shadow\">\r\n          <h2 className=\"text-center m-4\">Edit Product</h2>\r\n          <ImageUpload id={id} />\r\n          <form onSubmit={onUpdate}>{/* Rest of the form elements */}</form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}